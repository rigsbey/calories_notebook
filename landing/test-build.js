#!/usr/bin/env node

// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–±–æ—Ä–∫–∏ –ª–µ–Ω–¥–∏–Ω–≥–∞
const { execSync } = require('child_process')
const fs = require('fs')
const path = require('path')

console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–±–æ—Ä–∫—É –ª–µ–Ω–¥–∏–Ω–≥–∞...')

try {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ package.json
  if (!fs.existsSync('package.json')) {
    throw new Error('package.json –Ω–µ –Ω–∞–π–¥–µ–Ω')
  }

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
  console.log('üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...')
  execSync('npm install', { stdio: 'inherit' })

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º TypeScript
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º TypeScript...')
  execSync('npx tsc --noEmit', { stdio: 'inherit' })

  // –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç
  console.log('üî® –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç...')
  execSync('npm run build', { stdio: 'inherit' })

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .output
  if (!fs.existsSync('.output')) {
    throw new Error('–°–±–æ—Ä–∫–∞ –Ω–µ —Å–æ–∑–¥–∞–ª–∞ .output –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é')
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
  const requiredFiles = [
    '.output/server/index.mjs',
    '.output/public/index.html'
  ]

  for (const file of requiredFiles) {
    if (!fs.existsSync(file)) {
      throw new Error(`–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª: ${file}`)
    }
  }

  console.log('‚úÖ –°–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–∞!')
  console.log('üìä –†–∞–∑–º–µ—Ä —Å–±–æ—Ä–∫–∏:')
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —Å–±–æ—Ä–∫–∏
  execSync('du -sh .output', { stdio: 'inherit' })

  console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã!')

} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message)
  process.exit(1)
}
