"""
–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º
"""
import logging
from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command
from utils import error_handler
from services.report_service import ReportService
from services.google_calendar import GoogleCalendarService

logger = logging.getLogger(__name__)

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥
commands_router = Router()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å –æ—Ç—á–µ—Ç–æ–≤
report_service = ReportService()
calendar_service = GoogleCalendarService()

@commands_router.message(Command("help"))
@error_handler
async def help_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = """
ü§ñ **–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞**

**–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
/info - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ
/day - –ò—Ç–æ–≥–∏ –¥–Ω—è (–±—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø)
/week - –ò—Ç–æ–≥–∏ –Ω–µ–¥–µ–ª–∏ (–±—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø)
/summary - –ò—Ç–æ–≥–∏ –¥–Ω—è
/summary week - –ò—Ç–æ–≥–∏ –Ω–µ–¥–µ–ª–∏

**–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:**
1. üì∏ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –µ–¥—ã
2. üî¢ –£–∫–∞–∂–∏—Ç–µ –≤–µ—Å –≤ –≥—Ä–∞–º–º–∞—Ö
3. üìä –ü–æ–ª—É—á–∏—Ç–µ –∞–Ω–∞–ª–∏–∑ –ö–ë–ñ–£
4. üìÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ

**–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:**
‚Ä¢ –§–æ—Ç–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JPG, PNG
‚Ä¢ –í–µ—Å –æ—Ç 1 –¥–æ 5000 –≥—Ä–∞–º–º
‚Ä¢ –õ—é–±—ã–µ –±–ª—é–¥–∞ –∏ –ø—Ä–æ–¥—É–∫—Ç—ã

**–ß—Ç–æ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–æ—Ç:**
‚Ä¢ –°–æ—Å—Ç–∞–≤ –±–ª—é–¥–∞
‚Ä¢ –ö–∞–ª–æ—Ä–∏–∏ –∏ –ö–ë–ñ–£
‚Ä¢ –í–∏—Ç–∞–º–∏–Ω—ã –∏ –ø–æ–ª–µ–∑–Ω—ã–µ –≤–µ—â–µ—Å—Ç–≤–∞
‚Ä¢ –ü–∏—â–µ–≤—É—é —Ü–µ–Ω–Ω–æ—Å—Ç—å

–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –∑–∞–Ω–æ–≤–æ.
    """
    await message.answer(help_text, parse_mode="Markdown")

@commands_router.message(Command("info"))
@error_handler
async def info_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /info"""
    info_text = """
‚ÑπÔ∏è **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ**

**–í–µ—Ä—Å–∏—è:** 1.0.0
**–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:**
‚Ä¢ Python 3.8+
‚Ä¢ aiogram 3.x
‚Ä¢ OpenAI GPT-4 Vision
‚Ä¢ Google Calendar API

**–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
üîç –ê–Ω–∞–ª–∏–∑ —Å–æ—Å—Ç–∞–≤–∞ –µ–¥—ã –ø–æ —Ñ–æ—Ç–æ
üìä –†–∞—Å—á–µ—Ç –∫–∞–ª–æ—Ä–∏–π –∏ –ö–ë–ñ–£
üíä –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–∏—Ç–∞–º–∏–Ω–æ–≤
üìÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ Google Calendar
ü§ñ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã

**–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:**
‚Ä¢ –§–æ—Ç–æ —É–¥–∞–ª—è—é—Ç—Å—è –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
‚Ä¢ –î–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ API

–ë–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø–æ–º–æ—â–∏ –≤ –∫–æ–Ω—Ç—Ä–æ–ª–µ –ø–∏—Ç–∞–Ω–∏—è –∏ –∑–¥–æ—Ä–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏! üí™
    """
    await message.answer(info_text, parse_mode="Markdown")

@commands_router.message(Command("day"))
@error_handler
async def day_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /day - –±—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –¥–Ω–µ–≤–Ω–æ–º—É –æ—Ç—á–µ—Ç—É"""
    try:
        await message.answer("üìä –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ—Ç—á–µ—Ç –∑–∞ –¥–µ–Ω—å...")
        report = await report_service.generate_daily_report(message.from_user.id)
        await message.answer(report)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞: {e}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

@commands_router.message(Command("week"))
@error_handler
async def week_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /week - –±—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –Ω–µ–¥–µ–ª—å–Ω–æ–º—É –æ—Ç—á–µ—Ç—É"""
    try:
        await message.answer("üìä –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ—Ç—á–µ—Ç –∑–∞ –Ω–µ–¥–µ–ª—é...")
        report = await report_service.generate_weekly_report(message.from_user.id)
        await message.answer(report)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞: {e}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

@commands_router.message(Command("summary"))
@error_handler
async def summary_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /summary"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
        command_args = message.text.split()
        
        if len(command_args) > 1 and command_args[1].lower() == 'week':
            # –ù–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
            await message.answer("üìä –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ—Ç—á–µ—Ç –∑–∞ –Ω–µ–¥–µ–ª—é...")
            report = await report_service.generate_weekly_report(message.from_user.id)
        else:
            # –î–Ω–µ–≤–Ω–æ–π –æ—Ç—á–µ—Ç
            await message.answer("üìä –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ—Ç—á–µ—Ç –∑–∞ –¥–µ–Ω—å...")
            report = await report_service.generate_daily_report(message.from_user.id)
        
        await message.answer(report)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞: {e}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

@commands_router.message(lambda message: message.text and message.text.lower() in ['–∏—Ç–æ–≥–∏ –¥–Ω—è', '–∏—Ç–æ–≥–∏ –Ω–µ–¥–µ–ª–∏', '–æ—Ç—á–µ—Ç'])
@error_handler
async def text_summary_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç—á–µ—Ç–æ–≤"""
    try:
        text = message.text.lower()
        
        if '–Ω–µ–¥–µ–ª–∏' in text or '–Ω–µ–¥–µ–ª—è' in text:
            await message.answer("üìä –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ—Ç—á–µ—Ç –∑–∞ –Ω–µ–¥–µ–ª—é...")
            report = await report_service.generate_weekly_report(message.from_user.id)
        else:
            await message.answer("üìä –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ—Ç—á–µ—Ç –∑–∞ –¥–µ–Ω—å...")
            report = await report_service.generate_daily_report(message.from_user.id)
        
        await message.answer(report)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞ –ø–æ —Ç–µ–∫—Å—Ç—É: {e}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
